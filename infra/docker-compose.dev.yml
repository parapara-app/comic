services:
  postgres:
    image: postgres:latest
    env_file:
      - .env.dev
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    image: node:24-alpine
    working_dir: /app
    volumes:
      - ../frontend:/app
      - /app/node_modules
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    env_file:
      - .env.dev
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    networks:
      - app-network

  backend:
    image: rust:1.89.0
    working_dir: /app
    volumes:
      - ../backend:/app
      - cargo-cache:/usr/local/cargo/registry
      - cargo-git:/usr/local/cargo/git
      - cargo-bin:/usr/local/cargo/bin
      - target-cache:/app/target
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    env_file:
      - .env.dev
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DATABASE}
      - RUST_LOG=${RUST_LOG}
      - RUST_BACKTRACE=${RUST_BACKTRACE}
    command: >
      sh -c "
      which cargo-watch || cargo install cargo-watch &&
      cargo watch -x run"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  cargo-cache:
  cargo-git:
  cargo-bin:
  target-cache: