version: '3.8'

services:
  ssh-tunnel:
    image: alpine:3.20
    network_mode: host
    volumes:
      - ${BASTION_SSH_KEY_PATH}:/ssh/id_rsa:ro
    environment:
      BASTION_USER: ${BASTION_USER}
      BASTION_HOST: ${BASTION_HOST}
      BASTION_PORT: ${BASTION_PORT:-22}
      DB_TARGET_HOST: ${DB_TARGET_HOST}
      DB_TARGET_PORT: ${DB_TARGET_PORT:-5432}
      LOCAL_TUNNEL_PORT: ${LOCAL_TUNNEL_PORT:-5433}
      SSH_STRICT_HOST_KEY_CHECKING: ${SSH_STRICT_HOST_KEY_CHECKING:-no}
    healthcheck:
      test: ["CMD", "nc", "-z", "127.0.0.1", "${LOCAL_TUNNEL_PORT:-5433}"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s
    command:
      - sh
      - -lc
      - |
        set -e
        apk add --no-cache openssh-client netcat-openbsd
        # Copy key to a writable path and fix permissions
        cp /ssh/id_rsa /tmp/id_rsa
        chmod 600 /tmp/id_rsa
        # Start persistent local port-forward via bastion
        exec ssh -NT \
          -o ServerAliveInterval=30 \
          -o ServerAliveCountMax=6 \
          -o ExitOnForwardFailure=yes \
          -o StrictHostKeyChecking=$${SSH_STRICT_HOST_KEY_CHECKING} \
          -i /tmp/id_rsa \
          -p $${BASTION_PORT:-22} \
          -L 127.0.0.1:$${LOCAL_TUNNEL_PORT:-5433}:$${DB_TARGET_HOST}:$${DB_TARGET_PORT:-5432} \
          $${BASTION_USER}@$${BASTION_HOST}

  frontend:
    image: node:24-alpine
    working_dir: /app
    volumes:
      - ../frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8080
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    networks:
      - app-network

  backend:
    image: rust:1.89.0
    working_dir: /app
    network_mode: host
    volumes:
      - ../backend:/app
      - cargo-cache:/usr/local/cargo/registry
      - cargo-git:/usr/local/cargo/git
      - cargo-bin:/usr/local/cargo/bin
      - target-cache:/app/target
    env_file:
      - ../backend/.env
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    command: >
      sh -c "
      export DATABASE_URL=\"postgresql://\$${POSTGRES_USER}:\$${POSTGRES_PASSWORD}@127.0.0.1:\$${LOCAL_TUNNEL_PORT}/\$${POSTGRES_DATABASE}\" &&
      echo \"DATABASE_URL: \$$DATABASE_URL\" &&
      which cargo-watch || cargo install cargo-watch &&
      cargo watch -x run"
    depends_on:
      ssh-tunnel:
        condition: service_healthy

networks:
  app-network:
    driver: bridge

volumes:
  cargo-cache:
  cargo-git:
  cargo-bin:
  target-cache: